# predicate dispatching

define not(x)
  if x then 0
       else 1

define or(a b)
  if a then 1
       else b

define belowZero(x) lt(x 0)
define aboveZero(x) lt(0 x)
define isZero(x) not(or(belowZero(x) aboveZero(x)))

define abx(x:isZero) 0
define abs(x:aboveZero) x
define abs(x:belowZero) sub(0 x)

# should be true
lt(abs(1) abs(-2))
